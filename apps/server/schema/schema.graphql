# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  productId: String!
  name: String!
  imageUrl: String!
  description: String
  price: Float!
  availableQuantity: Int!
  limitPerTransaction: Int!
  unit: String!
  category: String!
  rating: Float!
  badgeText: String!
  tags: [String!]!
  createdAt: String!
  updatedAt: String!
}

type Pagination {
  limit: Int!
  next: String
  prev: String
}

type PaginatedProduct {
  items: [Product!]!
  pagination: Pagination!
}

type CartItem {
  productId: String!
  category: String!
  product: Product
  quantity: Int!
  createdAt: String!
  updatedAt: String!
}

type Cart {
  userId: String!
  orderId: String!
  items: [CartItem!]!
  count: Int!
  createdAt: String!
  updatedAt: String!
}

type Address {
  addressId: String!
  apartmentNumber: Int
  street: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  additionalInfo: String
  createdAt: String!
  updatedAt: String!
}

type User {
  userId: String!
  name: String
  email: String
  role: String!
  imageUrl: String
  phone: String
  address: [Address!]!
  blocked: Boolean!
  createdAt: String!
  updatedAt: String!
}

type Query {
  products(
    limit: Int! = 10
    cursor: String
    name: String
    category: String
    tags: [String!]
    minRating: Float
    maxRating: Float
    minPrice: Float
    maxPrice: Float
    showOutOfStock: Boolean = false
    sortBy: String = "name"
    sortAsc: Boolean = true
  ): PaginatedProduct!
  product(productId: String!): Product!
  cart: Cart!
  cartItem(productId: String!): CartItem!
  me: User
  addresses(limit: Float = 5): [Address!]!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  removeProduct(productId: String!): String!
  addItemToCart(cartInput: CartInput!): Cart!
  clearCart: Cart!
  updateUser(updateUserInput: UpdateUserInput!): User!
  putAddress(putAddressInput: PutAddressInput!): Address!
}

input CreateProductInput {
  productId: String
  name: String!
  imageUrl: String!
  unit: String!
  description: String
  price: Float!
  availableQuantity: Int!
  limitPerTransaction: Int!
  category: String!
  rating: Float! = 5
  badgeText: String!
  tags: [String!]!
}

input CartInput {
  productId: String!
  quantity: Int!
}

input UpdateUserInput {
  name: String!
  imageUrl: String
  email: String!
  phone: String!
}

input PutAddressInput {
  addressId: String
  apartmentNumber: Int
  street: String!
  city: String!
  state: String!
  zip: String!
  country: String!
  additionalInfo: String
}
