type Product {
  id: ID!
  name: String!
  imageUrl: String!
  description: String!
  price: Float!
  availableQuantity: Int!
  limitPerTransaction: Int!
  category: String!
  rating: Float!
  badgeText: String!
  tags: [String!]!
}

input ProductInput {
  id: ID
  name: String!
  imageUrl: String!
  description: String
  price: Float!
  availableQuantity: Int!
  limitPerTransaction: Int!
  category: String!
  rating: Float!
  badgeText: String
  tags: [String]!
}

type Pagination {
  limit: Int!
  prev: String
  next: String
}

type PaginatedProducts {
  items: [Product!]!
  pagination: Pagination
}

type Cart {
  id: ID!
  userId: ID!
  count: Int!
  items: [CartItem!]!
  total: Float!
}

type CartItem {
  product: Product!
  quantity: Int!
}

input CartInput {
  productId: ID!
  quantity: Int!
}

type User {
  id: ID!
}

type Query {
  hello(name: String): String!
  product(id: ID!): Product
  products(limit: Int = 10, cursor: String): PaginatedProducts!
}

type Mutation {
  login(id: ID): User
  addProduct(product: ProductInput!): Product
    @aws_auth(cognito_groups: ["admin"])
    @aws_iam
  addToCart(userId: ID!, cart: CartInput!): Cart
  removeFromCart(productId: ID!, quantity: Int!): Cart
  clearCart: Cart
  deleteProduct(id: ID!): ID! @aws_auth(cognito_groups: ["admin"]) @aws_iam
}

type Subscription {
  onCartUpdate(userId: ID!): Cart
    @aws_subscribe(mutations: ["addToCart", "removeFromCart", "clearCart"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
